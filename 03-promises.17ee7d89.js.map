{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhDcO,SAASC,cAAc,SAC/BC,iBAAiB,UAE9B,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAG3BC,QAAQC,IAAI,UAAgCC,OAAtBnB,EAAMoB,MAAM,YAAiCD,OAAvBJ,EAAKK,MAAM,cAAyBD,OAAbH,EAAOI,QAC1E,IAAMC,EAAUC,OAAON,EAAOI,OACxBG,EAAQD,OAAOP,EAAKK,OACpBI,EAASF,OAAOtB,EAAMoB,QAO9B,SAAsBJ,EAAQD,EAAMf,GAElC,IADA,IAAIyB,EAAU,EACLC,EAAI,EAAGA,GAAKV,EAAQU,IAO3B5B,EAAc4B,EALZD,GADQ,IAANC,EACS1B,EAGAe,GAGVY,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAU8B,EAAKD,EAAL5B,MACjBJ,EAAAkC,OAAOC,QAAQ,uBAAwCZ,OAAfpB,EAAS,QAAYoB,OAANU,EAAM,M,IAE9DG,OAAM,SAAAJ,G,IAAG7B,EAAQ6B,EAAR7B,SAAU8B,EAAKD,EAAL5B,MAClBJ,EAAAkC,OAAOG,QAAQ,sBAAqCd,OAAfpB,EAAS,QAAYoB,OAANU,EAAM,M,IAnBhEK,CAAab,EAASE,EAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/common.css';\n\nconst promisesForm = document.querySelector('.form');\npromisesForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  console.log(`Delay: ${delay.value}, Step: ${step.value}, Amount: ${amount.value}`);\n  const amountP = Number(amount.value);\n  const stepP = Number(step.value);\n  const delayP = Number(delay.value);\n\n  makePromises(amountP, stepP, delayP);  \n\n  // event.currentTarget.reset();\n}\n\nfunction makePromises(amount, step, delay) {\n  let counter = 0\n  for (let i = 1; i <= amount; i++) {\n    if (i === 1) {\n      counter += delay\n    }\n    else {\n      counter += step\n    }\n    createPromise(i, counter)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","console","log","concat","value","amountP","Number","stepP","delayP","counter","i","then","param","_$delay","Notify","success","catch","failure","$ce04d3a99e08e73b$var$makePromises"],"version":3,"file":"03-promises.17ee7d89.js.map"}